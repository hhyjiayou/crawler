<!--
   - Resin 4.0 configuration file.
  -->
<resin xmlns="http://caucho.com/ns/resin"
       xmlns:resin="urn:java:com.caucho.resin">

    <!-- property-based Resin configuration -->
    <resin:properties path="${__DIR__}/resin.properties" optional="true"/>

    <resin:if test="${properties_import_url}">
        <resin:properties path="${properties_import_url}"
                          optional="true" recover="true"/>
    </resin:if>


    <!-- Logging configuration for the JDK logging API -->
    <log-handler name="" level="all" path="stdout:"
                 timestamp="[%y-%m-%d %H:%M:%S.%s]"
                 format=" {${thread}} ${log.message}"/>

    <!--
       - Alternative pseudo-TTCC log format
       -
       - <log-handler name="" level="all" path="stdout:"
       -           timestamp="%y-%m-%d %H:%M:%S.%s"
       -           format=" [${thread}] ${log.level} ${log.shortName} - ${log.message}"/>
      -->

    <!--
       - level='info' for production
       - 'fine' or 'finer' for development and troubleshooting
      -->
    <logger name="" level="${log_level?:'info'}"/>

    <logger name="com.caucho.java" level="config"/>
    <logger name="com.caucho.loader" level="config"/>

    <!--
       - Default configuration applied to all clusters, including
       - HTTP, HTTPS, and /resin-admin configuration.
      -->
    <resin:import path="${resin.root}/conf/cluster-default.xml"/>

    <!--
       - health configuration
      -->
    <resin:import path="${resin.root}/conf/health.xml"/>


    <!--
       - Remote management requires at least one enabled admin user.
      -->
    <resin:AdminAuthenticator>
        <user name="${admin_user}" password="${admin_password}"/>

        <resin:import path="${resin.root}/conf/admin-users.xml" optional="true"/>
    </resin:AdminAuthenticator>

    <!--
       - For clustered systems, create a password in as cluster_system_key
      -->
    <cluster-system-key>${cluster_system_key}</cluster-system-key>

    <!--
       - For production sites, change dependency-check-interval to something
       - like 600s, so it only checks for updates every 10 minutes.
      -->
    <dependency-check-interval>${dependency_check_interval?:'2s'}</dependency-check-interval>

    <!-- For resin.properties dynamic cluster joining -->
    <home-cluster>${home_cluster}</home-cluster>
    <home-server>${home_server}</home-server>
    <elastic-server>${elastic_server}</elastic-server>
    <elastic-dns>${elastic_dns}</elastic-dns>

    <!--
       - Configures the main application cluster.  Load-balancing configurations
       - will also have a web cluster.
      -->

    <!-- DO NOT EDIT THIS FILE!! -->
    <cluster id="${artifactId}">
        <root-directory>.</root-directory>
        <server-default>
            <http address="*" port="13000" />
            <jvm-arg>-Xmx4096M</jvm-arg>
            <jvm-arg>-Xms3072M</jvm-arg>
            <jvm-arg>-Xmn2048M</jvm-arg>
            <!-- 最大线程数量. -->
            <thread-max>512</thread-max>
        </server-default>
        <server id="${artifactId}" address="127.0.0.1" port="13330"></server>
        <host id="" root-directory=".">
            <web-app id="/" root-directory="/home/work/webapps/${artifactId}" />
            <stdout-log path='/home/work/log/${artifactId}/${artifactId}.stdout.log' rollover-period='1D' rollover-size='500mb' />
            <stderr-log path='/home/work/log/${artifactId}/${artifactId}.stderr.log' rollover-period='1D' rollover-size='500mb' />
        </host>
    </cluster>

</resin>
